<SfDialog Width="320px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialog" />
    <DialogTemplates>
        <Header>Add Employee Health Issue</Header>
        <Content>
            <EditForm Model="Doctor" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                            <div class="form-group">
                            <label class="form-label">Employeee ID</label>
                            <input class="form-control" @bind="Doctor.EmployeeId" disabled />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Date</label>
                            <InputDate class="form-control" @bind-Value="Doctor.Date" />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Medical Diagnose</label>
                            <InputTextArea class="form-control" @bind-Value="Doctor.MedicalDiagnose" />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Recommendation</label>
                            <InputTextArea class="form-control" @bind-Value="Doctor.MedicalRecommendation" />
                        </div>
                    </div>
                </div>
            </EditForm>
            </Content>
            </DialogTemplates>

            <DialogButtons>
                <DialogButton Content="SAVE" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save"></DialogButton>
            </DialogButtons>
            </SfDialog>
@code {
    public string Title { get; set; } = "Add";
    [Parameter] public Doctor Doctor { get; set; } = new();
    [Parameter] public EventCallback<Doctor> HandleSaveOperationEvent { get; set; }

    private bool IsVisible {get; set;} = false;
    private async void Save() => await HandleSaveOperationEvent.InvokeAsync(Doctor);

    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void CloseDialog()
    {
        IsVisible = false;
        StateHasChanged();
    }

    public void ChangeTitle(string title) => Title = title;
}
