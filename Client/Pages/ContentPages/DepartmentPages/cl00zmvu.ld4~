// Replace the first line with this:
<SfDialog Width="350px" IsModal="true" ShowCloseIcon="true" Visible="@IsVisible" VisibleChanged="@OnVisibleChanged">
    
    <DialogTemplates>
        <Header> @Title Department </Header>
        <Content>
            <EditForm Model="Department" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Id</label>
                            <InputNumber @bind-Value="Department.Id" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Name</label>
                            <InputText @bind-Value="Department.Name" class="form-control" />
                            <ValidationMessage For="@(() => Department.Name)" />
                        </div>
                        <div class="form-group mt-3 mb-3">
                            <label class="form-label">General Department</label>
                            <SfDropDownList TValue="int" TItem="GeneralDepartment"
                                            DataSource="GeneralDepartments"
                                            @bind-Value="Department.GeneralDepartmentId">
                                <DropDownListFieldSettings Value="Id" Text="Name" />
                            </SfDropDownList>
                            <ValidationMessage For="@(() => Department.GeneralDepartmentId)" />
                        </div>
                    </div>
                </div>
                <div class="float-end">
                    <button type="button" class="btn btn-secondary me-2" @onclick="CloseDialog">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

@code {
    [Parameter]
    public Department Department { get; set; } = null;

    [Parameter]
    public List<GeneralDepartment> GeneralDepartments { get; set; } = new();

    [Parameter]
    public EventCallback<Department> HandleSaveOperationEvent { get; set; }

    private bool IsVisible { get; set; }

    public string Title { get; set; } = "Add";

    private async Task HandleValidSubmit()
    {
        await HandleSaveOperationEvent.InvokeAsync(Department);
        CloseDialog();
    }

    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void CloseDialog()
    {
        IsVisible = false;
        StateHasChanged();
    }

    public void ChangeTitle(string title)
    {
        Title = title;
        StateHasChanged();
    }


    public void OnValueChange(ChangeEventArgs<int, GeneralDepartment> args)
    {
        Department.GeneralDepartmentId = args.Value;
    }

    private void OnVisibleChanged(bool visible)
    {
        IsVisible = visible;
        StateHasChanged();
    }
}